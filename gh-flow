#!/bin/bash

set -e

SUBCOMMAND="$1"

function printMsg {
    echo "#################### $1"
}

if [[ "$SUBCOMMAND" == "start" ]]; then
	if [[ -z "$2" ]] ; then
		printMsg "Cannot build branch name. Usage: $0 start <branch-name> <jira-ticket-number>"
		exit 1
	else
		if [[ -z "$3" ]] ; then 
			BRANCH_NAME="$2"
		else
			BRANCH_NAME="$2""-AS24-#""$3"
		fi
		git fetch origin
		if `git rev-parse --verify $BRANCH_NAME &> /dev/null` ; then
			printMsg "Local branch already exists -> checkout and pull"
			git checkout "$BRANCH_NAME"
			git pull --ff-only
		else
			if `git rev-parse --verify remotes/origin/$BRANCH_NAME &> /dev/null` ; then
				printMsg "Local branch doesn't exist, but remote branch does -> create and track"
				git checkout -b "$BRANCH_NAME" origin/"$BRANCH_NAME"
			else
				printMsg "Local and remote branches don't exist -> create and push"
				git checkout -b "$BRANCH_NAME"
				git push --set-upstream origin "$BRANCH_NAME"
			fi
		fi
	fi
elif [[ "$SUBCOMMAND" == "end" ]]; then
	BRANCH_NAME="`git rev-parse --abbrev-ref HEAD`"
	if [[ "$BRANCH_NAME" == 'master' ]]; then
		echo "Cannot end master branch!"
		exit 1
	else
		MESSAGE="`echo $BRANCH_NAME | tr '-' ' ' | tr '_' ' '`"
		printMsg "Fast-forwarding"
		git pull --ff-only
		printMsg "Pushing"
		git push 
		printMsg "Creating pull request"
		echo hub pull-request -m "$MESSAGE"
		hub pull-request -m "$MESSAGE" || printMsg "Pull request failed"
		printMsg "Removing local branch"
		git checkout master
		git branch -D $BRANCH_NAME
	fi
else
	printMsg "Unknown subcommand '$SUBCOMMAND'. Available subcommands are start and end"
fi
